openapi: 3.0.0
info:
  title: Students Compass
  description: |
    Great API for students looking for a place to stay and spend your spare time on.
  termsOfService: http://swagger.io/terms/
  contact:
    email: studentscompass007@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/pgmarc/Students-Compass/1.0.0
  description: SwaggerHub API Auto Mocking
- url: https://student-compass-350106.appspot.com/api
  description: Production API server
- url: "http://localhost:{port}/api"
  description: Development server
  variables:
    port:
      enum:
      - "8089"
      default: "8089"
tags:
- name: places
  description: Interesting places
paths:
  /places:
    get:
      tags:
      - places
      summary: Get all places
      description: Get all places
      operationId: getAllPlaces
      responses:
        "200":
          description: List of places
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Places'

    post:
      tags:
      - places
      summary: Creates new places
      description: Creates new places with the given payload
      operationId: addPlaces
      requestBody:
        description: Payload of the place
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Place'
        required: true
      responses:
        "201":
          description: Succesfully created place
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Place'
              examples:
                Place:
                  $ref: '#/components/examples/Place1'
                Place1:
                  $ref: '#/components/examples/Place2'
  /places/{placeId}:
    get:
      tags:
      - places
      summary: Get a place by id
      description: Get a place by id
      operationId: getAPlace
      parameters:
      - name: placeId
        in: path
        description: Id of the place
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 1
      responses:
        "200":
          description: Values retrieved of a particular place
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Place'
              examples:
                Place1:
                  $ref: '#/components/examples/Place1'
                Place2:
                  $ref: '#/components/examples/Place2'
                Estanislao:
                  $ref: '#/components/examples/Accomodation1'
  /places/{placeId}/reviews:
    get:
      tags:
      - reviews
      summary: Get all reviews from a place by id
      description: Get all reviews from a place by id
      operationId: getAllReviews
      parameters:
      - name: placeId
        in: path
        description: Id of the place
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 1
      responses:
        "200":
          description: List of all the reviews from a particular place
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reviews'
        "404":
          description: Resource not found  
    post:
      tags:
      - reviews
      summary: Creates new reviews
      description: Creates new reviews with the given payload to the place
      operationId: addReviews
      parameters:
      - name: placeId
        in: path
        description: Id of the place
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 1
      requestBody:
        description: Payload of the review
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      responses:
        "201":
          description: Succesfully created place
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Place'  
        "400":
          description: Any of the parameters are not correct
        "404":
          description: Resource not found
          
  /places/{placeId}/reviews/{reviewId}:
    get:
      tags:
      - reviews
      summary: Get the specified review
      description: Get the specified review from a place by id
      operationId: getReview
      parameters:
      - name: placeId
        in: path
        description: Id of the place
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 1
      - name: reviewId
        in: path
        description: Id of the review
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 1
      responses:
        "200":
          description: Specified review
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        "404":
          description: Resource not found
    put:
      tags:
      - reviews
      summary: Update the specified review
      description: Update the specified review
      operationId: updateReview
      parameters:
      - name: placeId
        in: path
        description: Id of the place
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 1
      - name: reviewId
        in: path
        description: Id of the review
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 1
      requestBody:
        description: Payload of the updated review
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
      responses:
        "204":
          description: Review successfully deleted
        "400":
          description: Any parameter is not correct
        "404":
          description: Resource not found
    delete:
      tags:
      - reviews
      summary: Deletes a review
      description: Deletes the review with the given id
      operationId: deleteReview
      parameters:
      - name: placeId
        in: path
        description: Id of the place
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 1
      - name: reviewId   
        in: path
        description: Id of the review
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 1 
      responses:
        "204":
          description: Review successfully deleted
        "400":
          description: Any parameter is not correct
        "404":
          description: Resource not found
  /events:
    get:
      tags:
      - events
      summary: Get all events
      description: Get all events
      operationId: getAllEvents
      responses:
        "200":
          description: List of events
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/Events'
    post:
      tags:
      - events
      summary: Creates new events
      description: Creates new events with the given payload
      operationId: addEvents
      requestBody:
        description: Payload of the event
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Events'
        required: true
      responses:
        "201":
          description: Succesfully created event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Events'
  /events/{eventId}:
    get:
      tags:
      - events
      summary: Get a event by id
      description: Get a event by id
      operationId: getEvent
      parameters:
      - name: eventId
        in: path
        description: Id of the event
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 1
      responses:
        "200":
          description: Values retrieved of a particular event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Events'
    put:
      tags:
      - events
      summary: Update the specified event
      description: Update the specified event
      operationId: updateEvent
      parameters:
      - name: eventId
        in: path
        description: Id of the event
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 1
      requestBody:
        description: Payload of the updated event
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Events'
      responses:
        "204":
          description: Review successfully deleted
        "400":
          description: Any parameter is not correct
        "404":
          description: Resource not found
    delete:
      tags:
      - events
      summary: Deletes an event
      description: Deletes the event with the given id
      operationId: deleteEvent
      parameters:
      - name: eventId   
        in: path
        description: Id of the event
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          example: 1 
      responses:
        "204":
          description: Event successfully deleted
        "400":
          description: Any parameter is not correct
        "404":
          description: Resource not found
components:
  schemas:
    Accomodations:
      type: object
      nullable: true
      required:
        - numberOfRooms
        - type
        - payments
      properties:
        numberOfRooms:
          type: integer
        type:
          type: string
          enum:
            - RESIDENCE
            - FLAT
        payments:
          type: array
          items:
            $ref: '#/components/schemas/AccomodationPayments'
    AccomodationPayments:
      type: object
      required:
       - description
       - price
       - paymentPeriod
       - mealService
      properties:
        description:
          type: string
        price:
          type: number
          format: double
          example: 499.90
        paymentPeriod:
          type: string
          enum:
            - YEARLY
            - MONTHLY
        mealService:
          type: string
          enum:
            - ALL_MEALS
            - TWO_MEALS
            - SELF_CATERING
    Review:
      required:
       - Rating
      type: object
      properties:
        username:
          type: string
          description: Name of the author of the review
        description:
          type: string
        rating:
          type: integer
        date:
          type: string
          format: date-time
    Events:
      required:
      - date
      - contactEmail
      - name
      - organizators
      - price
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: integer
        date:
          type: string
          format: date-time
        website:
          type: string
        contactEmail:
          type: string
        types:
          type: string
          enum:
          - music
          - theater
          - art
          - cultural
        transport:
          type: string
          enum:
          - bus
          - train
          - bicycle
          - underground
        organizers:
          type: string
    Coordinates:
      required:
      - latitude
      - longitude
      type: object
      properties:
        latitude:
          maximum: 90
          minimum: -90
          type: number
          description: The latitude of the place
          format: double
        longitude:
          maximum: 180
          minimum: -180
          type: number
          description: The longitude of the place
          format: double
    Place:
      required:
      - address
      - location
      - name
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        address:
          type: string
        rating:
          type: integer
          description: The average of all the reviews of the users
          format: int32
        website:
          type: string
        accomodation:
          $ref: '#/components/schemas/Accomodations'
        location:
          $ref: '#/components/schemas/Coordinates'
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Reviews'
    Places:
      type: array
      items:
        $ref: '#/components/schemas/Place'
    Reviews:
      type: array
      items:
        $ref: '#/components/schemas/Review'
  examples:
    Event1:
      summary: Placido Domingo Event
      description: Example the concert of Placido Domingo
      value:
        name: Noches de la Maestranza
        description:
        price: 150
        date: 17-9-2022
        website:
        contactEmail:
        types:
        transport:
        organizers:
    Place1:
      summary: Gran ilustre place
      description: Example the library gran ilustre
      value:
        name: La biblioteca del gran ilustre
        email: ilustre@gmail.com
        address: Gran ilustre s/n
        rating: 5
        web: granilustre.com
        location:
          latitude: 40.0
          longitude: -65.4
    Place2:
      description: Example of a Place1
      value:
        name: La biblioteca del gran ilustre 1
        email: ilustre@gmail.com
        address: Gran ilustre s/n
        rating: 5
        web: granilustre.com
        location:
          latitude: 40.0
          longitude: -65.4
    Accomodation1:
      description: Example of a Place with Accomodation
      value:
        name: Estanislao del Campo
        email: estanislao@micampusliving.com
        address: Ctra. Su Eminencia 2A
        website: https://micampusresidencias.com/micampus-estanislao/
        rating: 4.0
        location:
          latitude: 60.2
          longitude: -20.9
        reviews:
          - username: theLegend27
            description: Muy buen sitio y bien mantenido, pero las comidas se podrían mejorar.
            rating: 4.0
        accomodation:
          numberOfRooms: 500
          payments: 
            - description: Habitación individual con cocina compartida
              price: 499.0
              paymentPeriod: YEARLY
              mealService: TWO_MEALS
              roomType: INDIVIDUAL
            - description: Habitación compartida
              price: 299.0
              paymentPeriod: MONTHLY
              mealService: ALL_MEALS
              roomType: DOUBLE
          type: RESIDENCE
  requestBodies:
    Coordinates:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Coordinates'
    Place:
      description: Place to add
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Place'